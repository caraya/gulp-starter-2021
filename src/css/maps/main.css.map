{"version":3,"sources":["partials/_generic.scss","partials/_headings.scss","partials/_mq.scss","partials/_flexbox.scss","partials/_images.scss","partials/_tables.scss","partials/_paragraphs-blockquotes.scss","partials/_media.scss","main.scss","partials/_fonts.scss","partials/_columns.scss","partials/_grids.scss"],"names":[],"mappings":";AAAA;AAaA;AAEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;AAIJ;AAEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;AAIJ;AAAA;EAEI;EACA;;;AAGJ;EACI;;;AAGJ;AAAA;EAEI;EACA;;;AAGJ;AAAA;EAEI;EACA;EACA;;;AASJ;AAEA;EACI;EACA;EACA;EACA;EACA;;AACA;EACI;;AACA;EACI;EACA;EACA;EACA;EACA;;AAGR;EACI;;AACA;EACI;EACA;EACA;EACA;EACA;;AAGR;EACI;;AACA;EACI;EACA;EACA;EACA;EACA;;;AAKZ;AACA;AAAA;EAEE;EACA;;;AC9GF;EACE;EACA;;ACcM;EDhBR;IAMI;IACA;;;ACSI;EDhBR;IAWI;IACA;;;;AAGJ;EACE;EACA;;ACDM;EDDR;IAKI;IACA;;;ACLI;EDDR;IAUI;IACA;;;;AAGJ;EACE;EACA;;ACfM;EDaR;IAKI;IACA;;;ACnBI;EDaR;IAUI;IACA;;;;AAGJ;EACE;EACA;;AC7BM;ED2BR;IAKI;IACA;;;ACjCI;ED2BR;IAUI;IACA;;;;AAGJ;EACE;EACA;;;AAEF;EACE;EACA;;;AEjEF;ACCA;EACE;EACA;;AAEA;EACE;EACA;;AAGF;EACE;EACA;;AAGF;EACE;;;AChBJ;EACE;EACA;;AAEA;EACE;;AAEA;EACE;;AAIJ;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;;;ACpBJ;EACE;EACA;EACA;EACA;;;AAEF;EACE;IACE;IACA;;;AAIJ;EACE;;;AAIF;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAIJ;EACE;;;ACxCF;AAAA;EAEE;EACA;EACA;EACA;EACA;;;AAGF;EACE;;AAEA;EACE;EACA;EACA;;AAGF;EACI;EACA;EACA;EACA;EACA;;;ACWN;ACNE;EACE;EACA;EACA;EAQA,aDJuE;ECKvE,YDL+E;;AACnF;ACRE;EACE;EACA;EACA;EAQA,aDFuE;ECGvE,YDH+E;;AACnF;ACVE;EACE;EACA;EACA;EAQA;EACA,YDDuE;;AAC3E;ACZE;EACE;EACA;EACA;EAQA,aDEsE;ECDtE,YDC+E;;AACnF;ACdE;EACE;EACA;EACA;EAQA,aDI6E;ECH7E,YDGmF;;AAOvF;EACE;EACA;;;AAGF;ELpDE;EACA;;;AKuDF;ELlDE;EACA;;;AKqDF;ELhDE;EACA;;;AKmDF;EL9CE;EACA;;;AKiDF;EL7CE;;;AKiDF;EACE;EACA;AAAwB;EACxB;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;;;AAIJ;AACA;EEzFE,cF0FwB;EExFxB,YFwF2B;EEtF3B,aANiD;EAQjD,aARiE;;;AF+FnE;EE7FE,cF8FwB;EE5FxB,YAJqC;EAMrC,aANiD;EAQjD,aARiE;;;AFmGnE;EErFE,cFsF8B;EEpF9B,YAJmD;EAMnD,aAN+D;EAQ/D,aAR+E;;;AF2FjF;EEzFE,cF0F8B;EExF9B,YAJmD;EAMnD,aAN+D;EAQ/D,aAR+E;;;AFiGjF;AAAgB;AG1GiC;EAC/C;EACA;EACA;;;AH2GF;AAAa;EACX;EACA;;;AAGF;AAAW;EACT;EACA;;;AAGF;AAAa;EACX;EACA;;;AAGF;AACA;EACE;EACA;;;AAIF","file":"../main.css","sourcesContent":["/* Default body style */\n\n// body {\n//     font-family: Verdana, sans-serif;\n//     font-size: 16px;\n//     line-height: 1.275;\n//     -webkit-text-decoration-skip: ink;\n//     -moz-text-decoration-skip: ink;\n//     -ms-text-decoration-skip: ink;\n//     text-decoration-skip-ink: auto;\n// }\n\n\n/* This will match if the fonts failed to load. It is identical to the default but doesn't have to be*/\n\n.fonts-failed body {\n    font-family: Verdana, sans-serif;\n    font-size: 16px;\n    line-height: 1.375;\n    -webkit-text-decoration-skip: ink;\n    -moz-text-decoration-skip: ink;\n    -ms-text-decoration-skip: ink;\n    text-decoration-skip-ink: auto;\n}\n\n\n/* This will match when fonts load successfully */\n\n.fonts-loaded body {\n    font-family: notosans-regular, verdana, sans-serif;\n    font-size: 16px;\n    line-height: 1.375;\n    -webkit-text-decoration-skip: ink;\n    -moz-text-decoration-skip: ink;\n    -ms-text-decoration-skip: ink;\n    text-decoration-skip-ink: auto;\n}\n\n// We need to assign specific font faces to specific styles (bold, italic, bold/italic\nem,\ni {\n    font-family: notosans-italic, Verdana, sans-serif;\n    font-style: italic;\n}\n\nem em {\n    font-family: notosans-regular, Verdana, sans-serif;\n}\n\nstrong,\nb {\n    font-family: notosans-bold, Verdana, sans-serif;\n    font-weight: 700;\n}\n\nstrong em,\nem strong {\n    font-family: notosans-bolditalic, Verdana, sans-serif;\n    font-weight: 700;\n    font-style: italic;\n}\n\n// code {\n//     background-color: #ededed;\n//     font-family: notomono-regular, Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n// }\n\n\n/* Informational messages */\n\n.message {\n    border: 1px solid black;\n    border-radius: 10px;\n    display: block;\n    padding: .5em;\n    margin: 1em 0;\n    &.info {\n        background-color: lightblue;\n        p:first-of-type::before {\n            content: \"Note: \\A\\A\";\n            clear: both;\n            font-size: 1.5em;\n            font-weight: bold;\n            white-space: pre;\n        }\n    }\n    &.warning {\n        background-color: lightyellow;\n        p:first-of-type::before {\n            content: \"Warning: \\A\\A\";\n            clear: both;\n            font-size: 1.5em;\n            font-weight: bold;\n            white-space: pre;\n        }\n    }\n    &.danger {\n        background-color: indianred;\n        p:first-of-type::before {\n            content: \"Danger: \\A\\A\";\n            clear: both;\n            font-size: 1.5em;\n            font-weight: bold;\n            white-space: pre;\n        }\n    }\n}\n\n/* adds a the content text to all links that go to vimeo or youtube */\nli a[href*=\"youtube\"]::before,\nli a[href*=\"vimeo\"]::before {\n  content: \"(Video) \";\n  font-weight: bold;\n}\n","@import 'mq';\n\nh1 {\n  font-size: 3em;\n  line-height: 1.05;\n\n\n  @include media-queries(tablet) {\n    font-size: 2.5em;\n    line-height: 1.125;\n  }\n\n  @include media-queries(phone) {\n    font-size: 2em;\n    line-height: 1.25;\n  }\n}\nh2 {\n  font-size: 2.25em;\n  line-height: 1.25;\n\n  @include media-queries(tablet) {\n    font-size: 2em;\n    line-height: 1.25;\n  }\n\n  @include media-queries(phone) {\n    font-size: 1.625em;\n    line-height: 1.15384615;\n  }\n}\nh3 {\n  font-size: 1.75em;\n  line-height: 1.25;\n\n  @include media-queries(tablet) {\n    font-size: 1.5em;\n    line-height: 1.25;\n  }\n\n  @include media-queries(phone) {\n    font-size: 1.375em;\n    line-height: 1.13636364;\n  }\n}\nh4 {\n  font-size: 1.125em;\n  line-height: 1.25;\n\n  @include media-queries(tablet) {\n    font-size: 1.125em;\n    line-height: 1.222222;\n  }\n\n  @include media-queries(phone) {\n    font-size: 1.125em;\n    line-height: 1.111111;\n  }\n}\nh5 {\n  font-size: ms(2);\n  line-height: 1.25;\n}\nh6 {\n  font-size: ms(1);\n  line-height: 1.25;\n}\n\n","// Builds media queries using nested maps\n// Each kind of mixin has two variants retina and non-retina\n@mixin media-queries($qtype) {\n  $value: screen;\n  $breakpoints: (\n    // phones\n    ( phone,     20em,   37.5em,   1),\n    // tablets\n    ( tablet,    37.5em, 50em,   1 ),\n    // big landscape tablets, laptops, an d desktops\n    ( desktop,   50em,   80em,   1),\n    // hi-res laptops and desktops\n    ( xlarge,    80em,   100em,  1),\n\n  );\n\n  @each $item in $breakpoints {\n    @if $qtype == nth($item, 1) {\n        @media #{$value} and (min-width: nth($item, 2))\n        and (max-width: nth($item, 3))\n        and (-webkit-min-device-pixel-ratio: nth($item, 4)) {\n\n          @content;\n\n      }\n    }\n  }\n}\n","/* Flexbox related classes */\n\n@mixin flex_row_forward() {\n  display: flex;\n  flex-flow: row wrap;\n  @content\n}\n\n@mixin flex_row_back() {\n  display: flex;\n  flex-flow: row-reverse wrap;\n  @content\n}\n\n@mixin flex_column_forward() {\n  display: flex;\n  flex-flow: column wrap;\n  @content\n}\n\n@mixin flex_column_back() {\n  display: flex;\n  flex-flow: column-reverse wrap;\n}\n\n@mixin flex_item() {\n  flex: 1 0 auto;\n}\n","// Builds figures with different alignments\nfigure {\n  counter-increment: figure-count;\n  max-width: 100%;\n\n  img {\n    max-height: auto;\n    max-width: inherit;\n  }\n\n  figcaption {\n    font-size: .75rem;\n    color: rgb(51, 51, 51);\n  }\n\n  figcaption::before {\n    content: 'Figure ' counter(figure-count) ': ';\n  }\n}\n\n@mixin image($width: 100%, $align: center) {\nimg {\n  @if ($align == left) {\n    float: left;\n    margin: 2em 0;\n  } @else if ($align  == center) {\n    margin: 2em auto;\n  } @else {\n    float: right;\n    margin: 2em 0;\n  }\n\n  width: $width;\n}\n}\n\n","table {\n  border-collapse: collapse;\n  width: 100%;\n\n  tbody {\n    border: 1px solid black;\n\n    tr:nth-child(even) {\n      background-color: #9e9e9e;\n    }\n  }\n\n  th {\n    border: 1px solid black;\n    font-family: notosans_bold, verdana, sans-serif;\n    padding: .5em;\n    text-align: center;\n  }\n\n  td {\n    border: 1px solid black;\n    padding: .5em;\n  }\n}\n","\nblockquote {\n  font-size: 1.1em;\n  line-height: 1.458333;\n  border-left: 0.5em solid #607d8b;\n  padding-left: 1.5em;\n}\n@media screen and (min-width: 20em) and (max-width: 37.5em) and (-webkit-min-device-pixel-ratio: 1) {\n  blockquote {\n    font-size: 1.1em;\n    line-height: 1.25;\n  }\n}\n\np:not:first-of-type {\n  text-indent: 2em;\n}\n\n\nblockquote .larger {\n  font-family: \"jubilat\", Georgia, Times, \"Times New Roman\", serif;\n  border-top: 2px solid #b70000;\n  border-bottom: 2px solid #b70000;\n  margin-bottom: 1em;\n  padding: 1em 0;\n  overflow: hidden;\n\n  :before {\n    display: block;\n    content: \"\\201C\";\n    font: 700 154px/1em \"proxima-nova\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n    height: 0.35em;\n    color: #b70000;\n    float: left;\n    position: relative;\n    top: -0.075em;\n  }\n}\n\np {\n  font-size: 1rem;\n}\n","video,\nobject {\n  clear: both;\n  display: block;\n  margin: 1em auto;\n  max-width: 100% !important;\n  height: auto !important;\n}\n\n.video {\n  margin: 2em 0;\n\n  p {\n    font-style: italic;\n    font-weight: 700;\n    margin-top: -.125em\n  }\n\n  iframe {\n      clear: both;\n      display: block;\n      margin: 1em auto;\n      max-width: inherit;\n      text-align: center\n  }\n}\n\n","// Modular scale import\n@import 'modular-scale/modular-scale';\n// Coloe variables\n@import 'partials/variables';\n// Mixins\n@import 'partials/mixins';\n// Import generic styles\n@import 'partials/generic';\n// Font declarations\n@import 'partials/fonts';\n// Media queries\n@import 'partials/mq';\n// Include headings mixin\n@import 'partials/headings';\n// flexbox partials\n@import 'partials/flexbox';\n// images partials\n@import 'partials/images';\n// import columns\n@import 'partials/columns';\n// Grid wrapper\n@import 'partials/grids';\n// import table stuff\n@import 'partials/tables';\n// import paragraph and blockuotes\n@import 'partials/paragraphs-blockquotes';\n// import media references\n@import 'partials/media';\n\n//Add @font-face declarations\n//\n//Notice that for Noto Sans we add 4 different font faces to eliminate the possibility of synthetic bold or italics font\n//\n//These will be loaded with the load-fonts.js script\n/* Monospaced font for code samples */\n@include font-declaration('notomono-regular', '../fonts/notomono-regular', normal, normal);\n/* Regular font */\n@include font-declaration('notosans-regular', '../fonts/notosans-regular', normal, normal);\n/* Bold font */\n@include font-declaration('notosans-bold', '../fonts/notosans-bold', 700 , normal);\n/* Italic Font */\n@include font-declaration('notosans-italics', '../fonts/notosans-italic', normal , italic);\n/* bold-italic font */\n@include font-declaration('notosans-bolditalic', '../fonts/notosans-bolditalic', 700 , italic);\n\n// Local variables for modular scale\n$ms-base: 1em;\n$ms-ratio: 1.25;\n\n\n.container {\n  margin: 0 auto;\n  width: 60%;\n}\n\n.flexbox-row-forward {\n  @include flex_row_forward();\n}\n\n.flexbox-row-back {\n  @include flex_row_back();\n}\n\n.flexbox-col-forward {\n  @include flex_column_forward();\n}\n\n.flexbox-col-back {\n  @include flex-column_back();\n}\n\n.flex-item {\n  @include flex_item();\n}\n\n.video {\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 */\n  padding-top: 25px;\n  height: 0;\n\n  iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n/* Column predefined classes */\n.cols-2 {\n  @include column-attribs(2, 2em);\n}\n\n.cols-3 {\n  @include column-attribs(3);\n}\n\n.cols-20em-fixed {\n  @include fixed-column-attribs(20em);\n}\n\n.cols-10em-fixed {\n  @include fixed-column-attribs(10em);\n}\n\n//grid-related  selectors for the template\n// DEFINE THE GRID CONTAINER\n.grid-wrapper{  /* autoprefixer: off*/\n  @include generate-grid(15);\n}\n// PLACE HEADER\n#header {    /* autoprefixer: off*/\n  grid-column: 1/-1;\n  grid-row: 1/2;\n}\n// PLACE MENU\n#menu {    /* autoprefixer: off*/\n  grid-column: 2/10;\n  grid-row: 3 / -1;\n}\n// PLACE CONTENT\n#content {   /* autoprefixer: off*/\n  grid-column: 12 /28;\n  grid-row: 3 / -1;\n}\n\n/* hide menu item bullets */\n.menu-item-link  {\n  list-style: none;\n  margin-left: -3em;\n}\n\n\n/* Include media queries for your project here*/\n","/// Handles font ligatures for different browsers. Since different browsers have adopted different ways to handle the attribute we have to make it a mixin.\n/// @access public\n@mixin font-ligature {\n  // optional: for older browsers\n  text-rendering: optimizeLegibility;\n  // for iOS and Safari 6\n  -webkit-font-variant-ligatures: common-ligatures;\n  // for up-to-date browsers, including IE10 and Opera 21\n  font-variant-ligatures: common-ligatures;\n}\n\n/// We also need to handle font kerning different for different browsers.\n/// @access public\n@mixin font-kerning {\n  // optional: for older browsers\n  text-rendering: optimizeLegibility;\n  // pre-Firefox 14+\n  -moz-font-feature-settings: \"kern=1\";\n  -webkit-font-feature-settings: \"kern\";\n  // Firefox 14+\n  -moz-font-feature-settings: \"kern\";\n  // standard */\n  font-feature-settings: \"kern\";\n  // Safari 7+, Firefox 24+, Chrome 33(?)+, Opera 21+*/\n  font-kerning: normal;\n}\n\n@mixin font-declaration($font-family,  $font-file-name, $weight:normal, $style:normal) {\n  @font-face {\n    font-family: '#{$font-family}';\n    src: url('#{$font-file-name}.eot');\n    src: url('#{$font-file-name}.eot?#iefix') format('embedded-opentype'),\n    url('#{$font-file-name}.woff2') format('woff2'),\n    url('#{$font-file-name}.woff') format('woff'),\n    url('#{$font-file-name}.ttf') format('truetype'),\n      // working with myFonts requires the svg file to be formated like below\n      // otherwise it will not work\n      //       url('#{$font-file-name}.svg#wf') format('svg');\n    url('#{$font-file-name}.svg##{$font-family}') format('svg');\n    font-weight: $weight;\n    font-style: $style;\n\n  }\n}\n","@mixin column-attribs ($cols: 2, $gap: 1em, $fill: balance, $span: none){\n  // How many columns?\n  column-count: $cols;\n  // Space between columns\n  column-gap: $gap;\n  // How do we fill the content of our columns, default is to balance */\n  column-fill: $fill;\n  // Column span, defaul is not to span columns */\n  column-span: $span;\n}\n\n\n@mixin fixed-column-attribs ($col-width: 15em, $gap: 1em, $fill: balance, $span: none) {\n  // How many columns?\n  column-width: $col-width;\n  // Space between columns\n  column-gap: $gap;\n  // How do we fill the content of our columns, default is to balance */\n  column-fill: $fill;\n  // Column span, defaul is not to span columns */\n  column-span: $span;\n}\n","// Grids mixins and demos\n\n\n@mixin generate-grid($columns: 15, $gap: 10px) { /* autoprefixer: off*/\n  display: grid;\n  grid-template-columns: 1fr repeat(($columns - 1), #{$gap} 1fr);\n  grid-template-rows: repeat(10, 100px #{$gap});\n}\n\n@mixin generate-fluid-grid($min-size: 100px, $max-size: 1fr, $gap: 10px) { /* autoprefixer: off*/\n  display: grid;\n  grid-gap: #{$gap};\n  grid-template-columns: repeat(auto-fill, minmax(#{$min-size}, #{$max-size}));\n  grid-template-rows: 1fr;\n}\n\n@mixin place-item($col_start: 1, $col_end: 1, $row_start: 1, $row_end: 1) {\n  grid-column: #{$col_start} / #{$col_end};\n  grid-row: #{$row_start} / #{$row_end};\n}\n"]}